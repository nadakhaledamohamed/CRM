@page "/dashboard"
@using CRM.Models
@using Microsoft.EntityFrameworkCore
@using System.Linq
@using Microsoft.AspNetCore.Components
@inject CallCenterContext Context


<PageTitle>CRM Dashboard</PageTitle>

@if (dashboard == null)
{
    <div class="text-center py-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p>Loading dashboard data...</p>
    </div>
}
else
{
    <div class="container-fluid px-4">
        <div class="row g-3 mb-4">
            <!-- Total Persons Card -->
            <div class="col-lg-3 col-sm-6">
                <div class="card shadow-sm border-0">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="text-muted mb-2">Total Persons</h6>
                                <h3>@dashboard.TotalPersons</h3>
                            </div>
                            <div class="icon bg-primary text-white rounded-circle p-3">
                                <i class="bi bi-people"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Total Requests Card -->
            <div class="col-lg-3 col-sm-6">
                <div class="card shadow-sm border-0">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="text-muted mb-2">Total Requests</h6>
                                <h3>@dashboard.TotalRequests</h3>
                            </div>
                            <div class="icon bg-success text-white rounded-circle p-3">
                                <i class="bi bi-journal-text"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Active Requests Card -->
            <div class="col-lg-3 col-sm-6">
                <div class="card shadow-sm border-0">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="text-muted mb-2">Active Requests</h6>
                                <h3>@dashboard.ActiveRequests</h3>
                            </div>
                            <div class="icon bg-warning text-white rounded-circle p-3">
                                <i class="bi bi-lightning-charge"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Growth Card -->
            <div class="col-lg-3 col-sm-6">
                <div class="card shadow-sm border-0">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="text-muted mb-2">Growth</h6>
                                <h3>+30.56%</h3>
                            </div>
                            <div class="icon bg-info text-white rounded-circle p-3">
                                <i class="bi bi-graph-up"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row g-3">
            <!-- Recent Requests Table -->
            <div class="col-lg-8">
                <div class="card shadow-sm">
                    <div class="card-header bg-white border-0 d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Recent Requests</h5>
                        <select class="form-select form-select-sm w-auto" @bind="selectedTimePeriod">
                            <option value="This Week">This Week</option>
                            <option value="Last Week">Last Week</option>
                            <option value="This Month">This Month</option>
                        </select>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table align-middle">
                                <thead>
                                    <tr>
                                        <th>Person</th>
                                        <th>Status</th>
                                        <th>Created</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (dashboard.RecentRequests != null)
                                    {
                                        @foreach (var request in dashboard.RecentRequests)
                                        {
                                            var latestStatus = request.StatusHistories?
                                                .OrderByDescending(sh => sh.UpdatedAt)
                                                .FirstOrDefault();
                                            
                                            <tr>
                                                <td>@request.Person?.FirstName @request.Person?.LastName</td>
                                                <td>
                                                    @if (latestStatus?.Status != null)
                                                    {
                                                        <span class="badge bg-primary">
                                                            @latestStatus.Status.StatusName
                                                        </span>
                                                    }
                                                </td>
                                                <td>@request.CreatedAt.ToString("MMM dd, yyyy")</td>
                                                <td>
                                                    <a href="/requests/details/@request.RequestId" class="btn btn-sm btn-outline-primary">View</a>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Actions + Timeline -->
            <div class="col-lg-4">
                <!-- Quick Actions -->
                <div class="card shadow-sm mb-3">
                    <div class="card-header bg-white border-0">
                        <h5 class="mb-0">Quick Actions</h5>
                    </div>
                    <div class="card-body d-grid gap-2">
                        <a href="/persons/create" class="btn btn-primary">Add New Person</a>
                        <a href="/requests/create" class="btn btn-outline-primary">Create New Request</a>
                        <a href="/reports" class="btn btn-outline-secondary">Generate Report</a>
                    </div>
                </div>

                <!-- Activity Timeline -->
                <div class="card shadow-sm">
                    <div class="card-header bg-white border-0">
                        <h5 class="mb-0">Recent Activity</h5>
                    </div>
                    <div class="card-body">
                        <ul class="list-unstyled">
                            <li class="mb-3">
                                <div class="fw-bold">John scheduled a call</div>
                                <div class="small text-muted">Apr 18, 2023 at 12:05 PM</div>
                            </li>
                            <li class="mb-3">
                                <div class="fw-bold">Request created, discovery call completed</div>
                                <div class="small text-muted">Apr 18, 2023 at 12:05 PM</div>
                            </li>
                            <li class="mb-3">
                                <div class="fw-bold">New person added: Jane Doe</div>
                                <div class="small text-muted">Apr 17, 2023 at 10:30 AM</div>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

@code {
    private DashboardViewModel? dashboard;
    private string selectedTimePeriod = "This Week";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LoadDashboardData();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading dashboard: {ex.Message}");
            // In a real app, you might want to show an error message to the user
        }
    }

    private async Task LoadDashboardData()
    {
        var totalPersons = await Context.People.CountAsync();
        var totalRequests = await Context.Requests.CountAsync();

        var activeRequests = await Context.Requests
            .Include(r => r.StatusHistories!)
            .ThenInclude(sh => sh.Status)
            .Where(r => r.StatusHistories != null && 
                r.StatusHistories.Any() &&
                r.StatusHistories
                    .OrderByDescending(sh => sh.UpdatedAt)
                    .FirstOrDefault()!.Status!.StatusName == "Active")
            .CountAsync();

        var recentRequests = await Context.Requests
            .Include(r => r.Person)
            .Include(r => r.StatusHistories!)
                .ThenInclude(sh => sh!.Status)
            .OrderByDescending(r => r.CreatedAt)
            .Take(5)
            .ToListAsync();

        dashboard = new DashboardViewModel
        {
            TotalPersons = totalPersons,
            TotalRequests = totalRequests,
            ActiveRequests = activeRequests,
            RecentRequests = recentRequests
        };
    }
}