@model CRM.Models.PersonRequestViewModel


@{
    ViewData["Title"] = "Edit Requests";
}
@{
    var statusList = ViewData["StatusIdList"] as List<SelectListItem>;
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet" />
<link href="~/css/light.css" rel="stylesheet" />
<style>


    /* Error styling for invalid inputs for javascripts functions  */
    .form-control.is-invalid {
        border-color: #dc3545;
        box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
    }

    /* Error message styling */
    #nationalid-error {
        font-size: 0.875rem;
        margin-top: 0.25rem;
        display: block;
    }

    /* Animation for error messages */
    .text-danger {
        animation: fadeIn 0.3s ease-in-out;
    }

        @@keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: translateY(-10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    /* Success state styling (optional) */
    .form-control.is-valid {
        border-color: #28a745;
        box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
    }

    /* Enhanced form styling */
    .form-control:focus {
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    /* Responsive error message */
        @@media (max-width: 768px) {
        #nationalid-error

    {
        font-size: 0.8rem;
    }

    }
</style>

<div class="container mt-5 animate__animated animate__fadeInUp">
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb bg-white p-3 rounded shadow-sm">
            <li class="breadcrumb-item"><a href="/persons/details" class="text-decoration-none text-primary">Dashboard</a></li>
            <li class="breadcrumb-item active" aria-current="page">Edit Requests #@Model.FirstName</li>
        </ol>
    </nav>

    <div class="card neon-card shadow-lg animate__animated animate__zoomIn">
        <div class="card-header text-white text-center py-3"
             style="background: linear-gradient(135deg, #2c3e50, #34495e); border-radius: 1rem 1rem 0 0;">
            <h4 class="fw-bold mb-0">Edit Requests for @Model.FirstName </h4>
        </div>

        <div class="card-body neon-form">
            <form asp-action="EditWithRequest" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="PersonID" />
                <input type="hidden" asp-for="ID" />

                <!-- Person Info -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="FirstName" class="form-label text-primary">Lead Name</label>
                        <input asp-for="FirstName" class="form-control" />
                        <span asp-validation-for="FirstName" class="text-danger"></span>
                    </div>
                    @* <div class="col-md-6"> *@
                    @*     <label asp-for="LastName" class="form-label text-primary">Last Name</label> *@
                    @*     <input asp-for="LastName" class="form-control" /> *@
                    @*     <span asp-validation-for="LastName" class="text-danger"></span> *@
                    @* </div> *@

                    <div class="col-md-6">
                        <label asp-for="UserType" class="form-label text-primary">User Type</label>
                        <select asp-for="UserType" class="form-select" asp-items="ViewBag.UserType">
                            <option disabled selected value="">-- Select Status --</option>
                        </select>
                        <span asp-validation-for="UserType" class="text-danger"></span>
                    </div>
                </div>


                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="Email" class="form-label text-primary">Email</label>
                        <input asp-for="Email" class="form-control" 
                              />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="Phone" class="form-label text-primary">Phone</label>
                        <input asp-for="Phone" class="form-control" readonly
                               style="background-color: #f1f3f5; cursor: not-allowed; color: #6c757d;" />
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="whatsApp" class="form-label text-primary">whatsApp</label>
                        <input asp-for="whatsApp" class="form-control" />
                        <span asp-validation-for="whatsApp" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="NationalId" class="form-label text-primary">National ID</label>
                        <input asp-for="NationalId" class="form-control" />
                        <span asp-validation-for="NationalId" class="text-danger"></span>
                        </div>

                        <div class="col-md-6">
                            <label asp-for="NationalityID" class="form-label text-primary">Nationality</label>
                            <select asp-for="NationalityID" class="form-select" asp-items="ViewBag.NationalityID">
                            <option disabled selected value="">-- Select Status --</option>
                            </select>
                            <span asp-validation-for="NationalityID" class="text-danger"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="CityID" class="form-label text-primary">City</label>
                        <select asp-for="CityID" class="form-select" asp-items="ViewBag.CityID">
                            <option disabled selected value="">-- Select Status --</option>
                            </select>
                            <span asp-validation-for="CityID" class="text-danger"></span>
                        </div>

                   

                </div>

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label asp-for="HighSchoolId" class="form-label text-primary">High School</label>
                        <select asp-for="HighSchoolId" class="form-select" asp-items="ViewBag.HighSchoolId" id="HighSchoolIdDropDown">
                            <option disabled selected value="">-- Select Status --</option>
                        </select>
                    </div>
                    <div class="col-md-4" id="HighschOtherDiv" style="display:none;">
                        <label asp-for="SchoolOther" class="form-label text-primary">Other High School</label>
                        <input asp-for="SchoolOther" class="form-control" />
                        <span asp-validation-for="SchoolOther" class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <label asp-for="CertificateId" class="form-label text-primary">Certificate</label>
                        <select asp-for="CertificateId" class="form-select" asp-items="ViewBag.CertificateId">
                            <option disabled selected value="">-- Select Status --</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label asp-for="GradeID" class="form-label text-primary">Grade</label>
                        <select asp-for="GradeID" class="form-select" asp-items="ViewBag.GradeID">
                            <option disabled selected value="">-- Select Status --</option>
                        </select>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label asp-for="MajorId" class="form-label text-primary">First Major Interest</label>
                        <select id="majorID1" asp-for="MajorId" class="form-select" asp-items="ViewBag.MajorId">
                            <option disabled selected value="">-- Select Status --</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label asp-for="SecondMajorId" class="form-label text-primary">Second Major Interest</label>
                        <select id="majorID2" asp-for="SecondMajorId" class="form-select" asp-items="ViewBag.SecondMajorId">
                            <option value="">-- Select Status --</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label asp-for="HowDidYouKnowUsId" class="form-label text-primary">How Did You Know Us?</label>
                        <select asp-for="HowDidYouKnowUsId" class="form-select" asp-items="ViewBag.HowDidYouKnowUsId" id="howDropdown">
                            <option disabled selected value="">-- Select Status --</option>
                        </select>
                    </div>
                </div>

                <div class="row mb-3" id="otherHowDidYouKnow" style="display: none;">
                    <div class="col-md-12">
                        <label asp-for="HowDidYouKnowUs_Other" class="form-label text-primary">You selected 'Other' — please specify how did you knew about us</label>
                        <input asp-for="HowDidYouKnowUs_Other" class="form-control" />
                        <span asp-validation-for="HowDidYouKnowUs_Other" class="text-danger"></span>
                    </div>
                </div>

                <!-- Created By and Updated By Information (Readonly) -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label text-primary">Created By</label>
                        <input type="text" class="form-control"
                               value="@Model.Person_CreatedByName"
                               readonly
                               style="background-color: #f1f3f5; cursor: not-allowed; color: #6c757d;" />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label text-primary">Created At</label>
                        <input type="text" class="form-control"
                               value="@Model.Person_CreatedAt.ToString("yyyy-MM-dd HH:mm")"
                               readonly
                               style="background-color: #f1f3f5; cursor: not-allowed; color: #6c757d;" />
                    </div>
                </div>

         
                <!-- Submit Buttons -->
                <div class="text-end">
                    <a asp-action="Details" asp-route-id="@Model.PersonID" class="btn btn-cancel me-2">Cancel</a>
                    @* <a asp-action="details" class="btn btn-cancel me-2">Cancel</a> *@
                    <button type="submit" class="btn btn-glow">
                        <i class="bi bi-check-circle me-1"></i> Save All Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.querySelector("form");
            const major1 = document.getElementById("majorID1");
            const major2 = document.getElementById("majorID2");
            const nationalIdInput = document.querySelector('input[name="NationalId"]');
            const nationalIdLabel = document.querySelector('label[for="NationalId"]');
            const nationalityDropdown = document.querySelector('select[name="NationalityID"]');

            // High School Other functionality
            const highSchoolDropdown = document.getElementById("HighSchoolIdDropDown");
            const highSchoolOtherDiv = document.getElementById("HighschOtherDiv");

            // Create error message element if it doesn't exist
            let nationalIdError = document.querySelector('#nationalid-error');
            if (!nationalIdError) {
                nationalIdError = document.createElement('span');
                nationalIdError.id = 'nationalid-error';
                nationalIdError.className = 'text-danger';
                nationalIdError.style.display = 'none';
                nationalIdInput?.parentNode?.appendChild(nationalIdError);
            }

            // Function to update National ID label and placeholder based on nationality
            function updateNationalIdLabel() {
                if (!nationalIdLabel || !nationalityDropdown) return;

                const selectedNationality = nationalityDropdown.value;
                const selectedText = nationalityDropdown.options[nationalityDropdown.selectedIndex]?.text || "";

                if (selectedText.toLowerCase().includes('egyptian') || selectedNationality === "1") {
                    // Egyptian nationality
                    nationalIdLabel.textContent = "National ID";
                    nationalIdInput?.setAttribute("placeholder", "Enter 14-digit National ID");
                } else if (selectedNationality && selectedNationality !== "" && selectedNationality !== null) {
                    // Any other nationality selected
                    nationalIdLabel.textContent = "Passport Number";
                    nationalIdInput?.setAttribute("placeholder", "Enter Passport Number");
                } else {
                    // No nationality selected
                    nationalIdLabel.textContent = "National ID";
                    nationalIdInput?.setAttribute("placeholder", "Select nationality first");
                }

                // Clear any existing error when nationality changes
                hideNationalIdError();

                // Re-validate if there's already input
                if (nationalIdInput?.value) {
                    validateNationalId();
                }
            }

            // Function to validate National ID in real-time
            function validateNationalId() {
                if (!nationalIdInput || !nationalityDropdown) return;

                const nationalId = nationalIdInput.value.trim();
                const selectedNationality = nationalityDropdown.value;
                const selectedText = nationalityDropdown.options[nationalityDropdown.selectedIndex]?.text || "";

                // Clear previous error
                hideNationalIdError();

                if (!nationalId) {
                    return; // Don't validate empty input
                }

                // Check if Egyptian nationality is selected
                if (selectedText.toLowerCase().includes('egyptian') || selectedNationality === "1") {
                    // Egyptian National ID validation
                    const cleanNationalId = nationalId.replace(/\s+/g, ''); // Remove spaces

                    if (cleanNationalId.length !== 14) {
                        showNationalIdError("Egyptian National ID must be exactly 14 digits.");
                        return false;
                    }

                    if (!/^\d{14}$/.test(cleanNationalId)) {
                        showNationalIdError("Egyptian National ID must contain only numbers.");
                        return false;
                    }

                    // Check first digit (should be 2 or 3)
                    // const firstDigit = cleanNationalId[0];
                    // if (firstDigit !== '2' && firstDigit !== '3') {
                    //     showNationalIdError("Invalid Egyptian National ID format. First digit should be 2 or 3.");
                    //     return false;
                    // }

                    // Validate date portion (positions 1-6: YYMMDD)
                    // const year = cleanNationalId.substring(1, 3);
                    // const month = cleanNationalId.substring(3, 5);
                    //const day = cleanNationalId.substring(5, 7);

                    // Validate month (01-12)
                    // const monthNum = parseInt(month, 10);
                    // if (monthNum < 1 || monthNum > 12) {
                    //     showNationalIdError("Invalid month in National ID. Month must be between 01-12.");
                    //     return false;
                    // }

                    // Validate day (01-31)
                    // const dayNum = parseInt(day, 10);
                    // if (dayNum < 1 || dayNum > 31) {
                    //     showNationalIdError("Invalid day in National ID. Day must be between 01-31.");
                    //     return false;
                    // }

                    // Additional date validation - check for valid date combinations
                    // const fullYear = parseInt(year, 10) + (parseInt(year, 10) > 50 ? 1900 : 2000);

                    // Create date object to validate the actual date
                    // const testDate = new Date(fullYear, monthNum - 1, dayNum);
                    // if (testDate.getFullYear() !== fullYear ||
                    //     testDate.getMonth() !== monthNum - 1 ||
                    //     testDate.getDate() !== dayNum) {
                    //     showNationalIdError("Invalid date in National ID (e.g., February 30th doesn't exist).");
                    //     return false;
                    // }

                    // Check if date is not in the future
                    // if (testDate > new Date()) {
                    //     showNationalIdError("Birth date in National ID cannot be in the future.");
                    //     return false;
                    // }

                } else if (selectedNationality && selectedNationality !== "" && selectedNationality !== null) {
                    // Foreign nationality - validate passport
                    if (nationalId.length < 5) {
                        showNationalIdError("Please enter a valid passport number (minimum 5 characters).");
                        return false;
                    }

                    // Additional passport validation - basic format check
                    if (!/^[A-Z0-9]+$/i.test(nationalId)) {
                        showNationalIdError("Passport number should contain only letters and numbers.");
                        return false;
                    }
                }

                return true;
            }

            // Function to show error message
            function showNationalIdError(message) {
                if (nationalIdError) {
                    nationalIdError.textContent = message;
                    nationalIdError.style.display = 'block';
                    nationalIdInput?.classList.add('is-invalid');
                }
            }

            // Function to hide error message
            function hideNationalIdError() {
                if (nationalIdError) {
                    nationalIdError.style.display = 'none';
                    nationalIdInput?.classList.remove('is-invalid');
                }
            }

            // Event listeners for nationality and national ID
            if (nationalityDropdown) {
                nationalityDropdown.addEventListener('change', updateNationalIdLabel);
                // Initialize on page load
                updateNationalIdLabel();
            }

            if (nationalIdInput) {
                // Validate on input (real-time)
                nationalIdInput.addEventListener('input', function() {
                    // Add small delay to avoid excessive validation while typing
                    clearTimeout(this.validationTimeout);
                    this.validationTimeout = setTimeout(validateNationalId, 300);
                });

                // Validate on blur (when user leaves the field)
                nationalIdInput.addEventListener('blur', validateNationalId);

                // Format Egyptian National ID as user types (optional - adds spaces for readability)
                nationalIdInput.addEventListener('input', function() {
                    const selectedNationality = nationalityDropdown?.value;
                    const selectedText = nationalityDropdown?.options[nationalityDropdown.selectedIndex]?.text || "";

                    if (selectedText.toLowerCase().includes('egyptian') || selectedNationality === "1") {
                        let value = this.value.replace(/\D/g, ''); // Remove non-digits
                        if (value.length > 14) {
                            value = value.substring(0, 14); // Limit to 14 digits
                        }
                        this.value = value;
                    }
                });
            }

            // High School Other functionality
            function toggleHighSchoolOther() {
                if (highSchoolDropdown && highSchoolOtherDiv) {
                    highSchoolOtherDiv.style.display = highSchoolDropdown.value === "-1" ? "block" : "none";
                }
            }

            if (highSchoolDropdown) {
                highSchoolDropdown.addEventListener("change", toggleHighSchoolOther);
                toggleHighSchoolOther(); // Initialize on page load
            }

            // How Did You Know Us Other functionality
            const howDropdown = document.getElementById("howDropdown");
            const otherHowDiv = document.getElementById("otherHowDidYouKnow");

            function toggleHowOther() {
                if (howDropdown && otherHowDiv) {
                    otherHowDiv.style.display = howDropdown.value === "8" ? "block" : "none";
                    if (howDropdown.value !== "8") {
                        const input = otherHowDiv.querySelector("input");
                        if (input) input.value = "";
                    }
                }
            }

            if (howDropdown) {
                howDropdown.addEventListener("change", toggleHowOther);
                toggleHowOther(); // Initialize on page load
            }

          
            // Major validation
            if (form) {
                form.addEventListener("submit", function (e) {
                    // Validate National ID before form submission
                    if (nationalIdInput && nationalIdInput.value && !validateNationalId()) {
                        e.preventDefault();
                        return;
                    }

                    // Check if majors are the same
                    if (major1 && major2 && major1.value && major2.value && major1.value === major2.value) {
                        e.preventDefault();
                        alert("Primary and second major cannot be the same.");
                        return;
                    }
                });
            }

            // jQuery-based "How Did You Know Us" functionality (if jQuery is available)
            if (typeof $ !== 'undefined') {
                $(document).ready(function() {
                    // Function to toggle the "Other" textbox
                    function toggleOtherHowDidYouKnow() {
                        var selectedValue = $('#howDropdown').val();
                        if (selectedValue == '8') { // 8 is the ID for "Other"
                            $('#otherHowDidYouKnow').show();
                        } else {
                            $('#otherHowDidYouKnow').hide();
                            $('#HowDidYouKnowUs_Other').val(''); // Clear the textbox when hiding
                        }
                    }

                    // Initial check when page loads
                    toggleOtherHowDidYouKnow();

                    // Handle dropdown change
                    $('#howDropdown').change(function() {
                        toggleOtherHowDidYouKnow();
                    });
                });
            }
        });
    </script>
}

@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}