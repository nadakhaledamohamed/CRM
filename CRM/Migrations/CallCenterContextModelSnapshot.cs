// <auto-generated />
using System;
using CRM.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRM.Migrations
{
    [DbContext(typeof(CallCenterContext))]
    partial class CallCenterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRM.Models.AcademicSetting", b =>
                {
                    b.Property<int>("AcademicSettingId")
                        .HasColumnType("int")
                        .HasColumnName("Academic_Setting_ID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfInterests")
                        .HasColumnType("int")
                        .HasColumnName("NumberOf_Interests");

                    b.Property<string>("SemsterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("1 for fall ,2 for spring ");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("AcademicSettingId");

                    b.ToTable("Academic_Setting");
                });

            modelBuilder.Entity("CRM.Models.LookUpHighSchool", b =>
                {
                    b.Property<int>("HighSchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HighSchool_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HighSchoolId"));

                    b.Property<string>("HighSchoolName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("HighSchoolId");

                    b.ToTable("LookUp_HighSchools");
                });

            modelBuilder.Entity("CRM.Models.LookUpHighSchoolCert", b =>
                {
                    b.Property<int>("CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Certificate_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificateId"));

                    b.Property<string>("CertificateName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("certificate_Name");

                    b.HasKey("CertificateId")
                        .HasName("PK_LookUp_HighSchool_Cert_1");

                    b.ToTable("LookUp_HighSchool_Cert");
                });

            modelBuilder.Entity("CRM.Models.LookUpHowDidYouKnowU", b =>
                {
                    b.Property<int>("HowDidYouKnowUsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HowDidYouKnowUs_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HowDidYouKnowUsId"));

                    b.Property<string>("HowDidYouKnowUs")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("HowDidYouKnowUsId");

                    b.ToTable("LookUp_HowDidYouKnowUs");
                });

            modelBuilder.Entity("CRM.Models.LookUpStatusType", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<bool>("RequireFollowUp")
                        .HasColumnType("bit");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("StatusId")
                        .HasName("PK__StatusTy__C8EE2043CC4C0C0E");

                    b.HasIndex(new[] { "StatusName" }, "UQ__StatusTy__05E7698A1B6E7D5A")
                        .IsUnique();

                    b.ToTable("LookUp_StatusTypes");
                });

            modelBuilder.Entity("CRM.Models.LookupMajor", b =>
                {
                    b.Property<int>("MajorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MajorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MajorId"));

                    b.Property<string>("MajorInterest")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nchar(150)")
                        .HasColumnName("Major_Interest")
                        .IsFixedLength();

                    b.HasKey("MajorId");

                    b.ToTable("Lookup_Major");
                });

            modelBuilder.Entity("CRM.Models.LookupRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("RoleId");

                    b.ToTable("Lookup_Roles");
                });

            modelBuilder.Entity("CRM.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PersonID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<int>("CertificateId")
                        .HasColumnType("int")
                        .HasColumnName("Certificate_ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedByCode")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy_Code");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HighSchoolId")
                        .HasColumnType("int")
                        .HasColumnName("HighSchool_ID");

                    b.Property<int>("HowDidYouKnowUsId")
                        .HasColumnType("int")
                        .HasColumnName("HowDidYouKnowUs_ID");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MajorId")
                        .HasColumnType("int")
                        .HasColumnName("Major_ID");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NationalID");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedByCode")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy_Code");

                    b.Property<int>("UserType")
                        .HasColumnType("int")
                        .HasComment("1 for Applicant & 2 for Gurdian ");

                    b.HasKey("PersonId")
                        .HasName("PK__Applican__39AE914807969DE7");

                    b.HasIndex("CertificateId");

                    b.HasIndex("CreatedByCode");

                    b.HasIndex("HighSchoolId");

                    b.HasIndex("HowDidYouKnowUsId");

                    b.HasIndex("MajorId");

                    b.HasIndex("UpdatedByCode");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("CRM.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<string>("Comments")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedByCode")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy_Code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FollowUpCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastFollowUpDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PersonID");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedByCode")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy_Code");

                    b.HasKey("RequestId")
                        .HasName("PK__Requests__33A8519A39A60AAD");

                    b.HasIndex("CreatedByCode");

                    b.HasIndex("PersonId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UpdatedByCode");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("CRM.Models.StatusHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HistoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<string>("ChangeReason")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCurrentStatus")
                        .HasColumnType("bit")
                        .HasColumnName("IsCurrent_Status");

                    b.Property<int>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedByCode")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy_Code");

                    b.HasKey("HistoryId")
                        .HasName("PK__StatusHi__4D7B4ADDB00E26D6");

                    b.HasIndex("RequestId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UpdatedByCode");

                    b.ToTable("StatusHistory");
                });

            modelBuilder.Entity("CRM.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .IsFixedLength();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .IsFixedLength();

                    b.Property<int>("UserCode")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCACD67BA816");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E4737850FD")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534CE0E781A")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CRM.Models.Person", b =>
                {
                    b.HasOne("CRM.Models.LookUpHighSchoolCert", "Certificate")
                        .WithMany("People")
                        .HasForeignKey("CertificateId")
                        .IsRequired()
                        .HasConstraintName("FK_Person_LookUp_HighSchool_Cert1");

                    b.HasOne("CRM.Models.User", "CreatedByCodeNavigation")
                        .WithMany("PersonCreatedByCodeNavigations")
                        .HasForeignKey("CreatedByCode")
                        .IsRequired()
                        .HasConstraintName("FK_Person_Users1");

                    b.HasOne("CRM.Models.LookUpHighSchool", "HighSchool")
                        .WithMany("People")
                        .HasForeignKey("HighSchoolId")
                        .IsRequired()
                        .HasConstraintName("FK_Person_LookUp_HighSchools1");

                    b.HasOne("CRM.Models.LookUpHowDidYouKnowU", "HowDidYouKnowUs")
                        .WithMany("People")
                        .HasForeignKey("HowDidYouKnowUsId")
                        .IsRequired()
                        .HasConstraintName("FK_Person_LookUp_HowDidYouKnowUs");

                    b.HasOne("CRM.Models.LookupMajor", "Major")
                        .WithMany("People")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Person_Lookup_Major");

                    b.HasOne("CRM.Models.User", "UpdatedByCodeNavigation")
                        .WithMany("PersonUpdatedByCodeNavigations")
                        .HasForeignKey("UpdatedByCode")
                        .HasConstraintName("FK_Person_Users");

                    b.Navigation("Certificate");

                    b.Navigation("CreatedByCodeNavigation");

                    b.Navigation("HighSchool");

                    b.Navigation("HowDidYouKnowUs");

                    b.Navigation("Major");

                    b.Navigation("UpdatedByCodeNavigation");
                });

            modelBuilder.Entity("CRM.Models.Request", b =>
                {
                    b.HasOne("CRM.Models.User", "CreatedByCodeNavigation")
                        .WithMany("RequestCreatedByCodeNavigations")
                        .HasForeignKey("CreatedByCode")
                        .IsRequired()
                        .HasConstraintName("FK_Requests_Users");

                    b.HasOne("CRM.Models.Person", "Person")
                        .WithMany("Requests")
                        .HasForeignKey("PersonId")
                        .IsRequired()
                        .HasConstraintName("FK_Requests_Person");

                    b.HasOne("CRM.Models.LookUpStatusType", "Status")
                        .WithMany("Requests")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Requests_LookupStatus");

                    b.HasOne("CRM.Models.User", "UpdatedByCodeNavigation")
                        .WithMany("RequestUpdatedByCodeNavigations")
                        .HasForeignKey("UpdatedByCode")
                        .HasConstraintName("FK_Requests_Users1");

                    b.Navigation("CreatedByCodeNavigation");

                    b.Navigation("Person");

                    b.Navigation("Status");

                    b.Navigation("UpdatedByCodeNavigation");
                });

            modelBuilder.Entity("CRM.Models.StatusHistory", b =>
                {
                    b.HasOne("CRM.Models.Request", "Request")
                        .WithMany("StatusHistories")
                        .HasForeignKey("RequestId")
                        .IsRequired()
                        .HasConstraintName("FK_StatusHistory_Requests");

                    b.HasOne("CRM.Models.LookUpStatusType", "Status")
                        .WithMany("StatusHistories")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_StatusHistory_LookUp_StatusTypes");

                    b.HasOne("CRM.Models.User", "UpdatedByCodeNavigation")
                        .WithMany("StatusHistories")
                        .HasForeignKey("UpdatedByCode")
                        .HasConstraintName("FK_StatusHistory_Users");

                    b.Navigation("Request");

                    b.Navigation("Status");

                    b.Navigation("UpdatedByCodeNavigation");
                });

            modelBuilder.Entity("CRM.Models.User", b =>
                {
                    b.HasOne("CRM.Models.LookupRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Users_Roles");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CRM.Models.LookUpHighSchool", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("CRM.Models.LookUpHighSchoolCert", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("CRM.Models.LookUpHowDidYouKnowU", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("CRM.Models.LookUpStatusType", b =>
                {
                    b.Navigation("Requests");

                    b.Navigation("StatusHistories");
                });

            modelBuilder.Entity("CRM.Models.LookupMajor", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("CRM.Models.LookupRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CRM.Models.Person", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("CRM.Models.Request", b =>
                {
                    b.Navigation("StatusHistories");
                });

            modelBuilder.Entity("CRM.Models.User", b =>
                {
                    b.Navigation("PersonCreatedByCodeNavigations");

                    b.Navigation("PersonUpdatedByCodeNavigations");

                    b.Navigation("RequestCreatedByCodeNavigations");

                    b.Navigation("RequestUpdatedByCodeNavigations");

                    b.Navigation("StatusHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
